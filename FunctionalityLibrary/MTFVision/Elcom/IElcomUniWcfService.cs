//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IElcomUniService", CallbackContract=typeof(IElcomUniServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
public interface IElcomUniService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElcomUniService/Command", ReplyAction="http://tempuri.org/IElcomUniService/CommandResponse")]
    string Command(string cmdString);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElcomUniService/CommandImage", ReplyAction="http://tempuri.org/IElcomUniService/CommandImageResponse")]
    ElcomTypes.ElcomImage CommandImage(ElcomTypes.ElcomImage elcomImage);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElcomUniService/InitElcomVision", ReplyAction="http://tempuri.org/IElcomUniService/InitElcomVisionResponse")]
    string InitElcomVision(int timeout);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElcomUniService/ShutDownElcomVision", ReplyAction="http://tempuri.org/IElcomUniService/ShutDownElcomVisionResponse")]
    void ShutDownElcomVision(int timeout);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IElcomUniServiceCallback
{
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IElcomUniService/NotifyImageAcquired")]
    void NotifyImageAcquired(ElcomTypes.ElcomImage image);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IElcomUniService/NotifyAsyncResponse")]
    void NotifyAsyncResponse(string cmdString);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IElcomUniService/NotifyAsyncImageResponse")]
    void NotifyAsyncImageResponse(ElcomTypes.ElcomImage image);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IElcomUniServiceChannel : IElcomUniService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ElcomUniServiceClient : System.ServiceModel.DuplexClientBase<IElcomUniService>, IElcomUniService
{
    
    public ElcomUniServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
            base(callbackInstance)
    {
    }
    
    public ElcomUniServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
            base(callbackInstance, endpointConfigurationName)
    {
    }
    
    public ElcomUniServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
            base(callbackInstance, endpointConfigurationName, remoteAddress)
    {
    }
    
    public ElcomUniServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(callbackInstance, endpointConfigurationName, remoteAddress)
    {
    }
    
    public ElcomUniServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(callbackInstance, binding, remoteAddress)
    {
    }
    
    public string Command(string cmdString)
    {
        return base.Channel.Command(cmdString);
    }
    
    public ElcomTypes.ElcomImage CommandImage(ElcomTypes.ElcomImage elcomImage)
    {
        return base.Channel.CommandImage(elcomImage);
    }
    
    public string InitElcomVision(int timeout)
    {
        return base.Channel.InitElcomVision(timeout);
    }
    
    public void ShutDownElcomVision(int timeout)
    {
        base.Channel.ShutDownElcomVision(timeout);
    }
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IElcomUniServiceStatus", CallbackContract=typeof(IElcomUniServiceStatusCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
public interface IElcomUniServiceStatus
{
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IElcomUniServiceStatus/Subscribe")]
    void Subscribe(System.Guid SubID, ElcomTypes.Level fromLevel);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IElcomUniServiceStatus/UnSubscribe")]
    void UnSubscribe(System.Guid SubID);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IElcomUniServiceStatusCallback
{
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IElcomUniServiceStatus/NotifyStatus")]
    void NotifyStatus(ElcomTypes.Status status);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IElcomUniServiceStatusChannel : IElcomUniServiceStatus, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ElcomUniServiceStatusClient : System.ServiceModel.DuplexClientBase<IElcomUniServiceStatus>, IElcomUniServiceStatus
{
    
    public ElcomUniServiceStatusClient(System.ServiceModel.InstanceContext callbackInstance) : 
            base(callbackInstance)
    {
    }
    
    public ElcomUniServiceStatusClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
            base(callbackInstance, endpointConfigurationName)
    {
    }
    
    public ElcomUniServiceStatusClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
            base(callbackInstance, endpointConfigurationName, remoteAddress)
    {
    }
    
    public ElcomUniServiceStatusClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(callbackInstance, endpointConfigurationName, remoteAddress)
    {
    }
    
    public ElcomUniServiceStatusClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(callbackInstance, binding, remoteAddress)
    {
    }
    
    public void Subscribe(System.Guid SubID, ElcomTypes.Level fromLevel)
    {
        base.Channel.Subscribe(SubID, fromLevel);
    }
    
    public void UnSubscribe(System.Guid SubID)
    {
        base.Channel.UnSubscribe(SubID);
    }
}
