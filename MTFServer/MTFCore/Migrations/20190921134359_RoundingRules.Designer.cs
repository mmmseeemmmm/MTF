// <auto-generated />
using System;
using MTFCore.DbReporting;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MTFCore.Migrations
{
    [DbContext(typeof(DbReportingContext))]
    [Migration("20190921134359_RoundingRules")]
    partial class RoundingRules
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("MTFClientServerCommon.DbEntities.DbReportEntities.ReportRoundingRules", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Digits");

                    b.Property<int>("Max");

                    b.Property<int>("Min");

                    b.Property<int>("SequenceRunId");

                    b.HasKey("Id");

                    b.HasIndex("SequenceRunId");

                    b.ToTable("RoundingRule");
                });

            modelBuilder.Entity("MTFClientServerCommon.DbEntities.DbReportEntities.ReportSequenceRun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Machine")
                        .HasMaxLength(255);

                    b.Property<string>("SequenceName")
                        .HasMaxLength(255);

                    b.Property<DateTime>("StartTime");

                    b.Property<DateTime?>("StopTime");

                    b.Property<string>("WinUser")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("SequenceName");

                    b.ToTable("SequenceRun");
                });

            modelBuilder.Entity("MTFClientServerCommon.DbEntities.DbReportEntities.ReportRoundingRules", b =>
                {
                    b.HasOne("MTFClientServerCommon.DbEntities.DbReportEntities.ReportSequenceRun", "SequenceRun")
                        .WithMany("RoundingRules")
                        .HasForeignKey("SequenceRunId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
