<UserControl x:Class="MTFApp.SequenceEditor.Settings.SequenceVariant.SequenceVariantWizard"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:sequenceVariant="clr-namespace:MTFApp.SequenceEditor.Settings.SequenceVariant"
             xmlns:alControls="clr-namespace:ALControls;assembly=ALControls"
             xmlns:validationRules="clr-namespace:MTFApp.UIHelpers.ValidationRules"
             xmlns:mtfClientServerCommon="clr-namespace:MTFClientServerCommon;assembly=MTFClientServerCommon"
             xmlns:mtfTable="clr-namespace:MTFClientServerCommon.MTFTable;assembly=MTFClientServerCommon"
             xmlns:localizedString="clr-namespace:MTFApp.UIHelpers.Editors.LocalizedString"
             xmlns:mtfValidationTable="clr-namespace:MTFClientServerCommon.MTFValidationTable;assembly=MTFClientServerCommon"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>

        <DataTemplate x:Key="EmptyTemplate" />

        <DataTemplate x:Key="Buttons" DataType="{x:Type sequenceVariant:SequenceVariantWizardPresenter}">
            <StackPanel Orientation="Horizontal">
                <Button Content="Back" Command="{Binding BackCommand}" />
                <Button Content="Next" Click="NextCommandClick" CommandParameter="{Binding ElementName=ParentElement}"
                        IsEnabled="{Binding NextCommandIsEnabled}" />
                <Button Content="{Binding ApplyTitle}" Command="{Binding ApplyCommand}" />
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="EditTemplate" DataType="{x:Type sequenceVariant:VariantValueSetting}">
            <TextBox VerticalAlignment="Center" validationRules:ValidationExtension.UseValidation="True">
                <TextBox.Style>
                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="ToolTip"
                                        Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
                <TextBox.Text>
                    <Binding Path="NewName" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validationRules:EmptyStringValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </DataTemplate>

        <DataTemplate x:Key="EditTemplateSelector" DataType="{x:Type sequenceVariant:VariantValueSetting}">
            <ContentPresenter Content="{Binding}">
                <ContentPresenter.Style>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="ContentTemplate" Value="{StaticResource EmptyTemplate}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding EditMode}"
                                         Value="{x:Static sequenceVariant:EditVariantMode.Edit}">
                                <Setter Property="ContentTemplate" Value="{StaticResource EditTemplate}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentPresenter.Style>
            </ContentPresenter>
        </DataTemplate>

        <DataTemplate x:Key="AddMode" DataType="{x:Type sequenceVariant:VariantValueSetting}">
            <StackPanel Orientation="Horizontal">

                <Button Click="ButtonRemoveNewVariantOnClick" BorderBrush="Transparent" Margin="26,0,0,0"
                        Tag="{Binding DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}}"

                        CommandParameter="{Binding}">
                    <UserControl Style="{StaticResource IconTrash}" Height="20" />
                </Button>

                <ContentPresenter Content="{Binding}" ContentTemplate="{StaticResource EditTemplate}" />
                <!--<TextBox Text="{Binding NewName, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" />-->
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="ChangeMode" DataType="{x:Type sequenceVariant:VariantValueSetting}">
            <StackPanel Orientation="Horizontal">
                <ToggleButton Padding="2" BorderBrush="Transparent" Margin="0"
                              IsChecked="{Binding EditMode, Mode=OneWay, Converter={StaticResource EnumToBolean},
                                            ConverterParameter={x:Static sequenceVariant:EditVariantMode.Edit}}"
                              Command="{Binding DataContext.EditVariantCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"
                              CommandParameter="{Binding}">
                    <UserControl Style="{StaticResource IconPencil}" Height="20" />
                </ToggleButton>
                <ToggleButton BorderBrush="Transparent" Margin="0"
                              IsChecked="{Binding EditMode, Mode=OneWay, Converter={StaticResource EnumToBolean},
                                            ConverterParameter={x:Static sequenceVariant:EditVariantMode.Remove}}"
                              Command="{Binding DataContext.RemoveVariantCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"
                              CommandParameter="{Binding}">
                    <UserControl Style="{StaticResource IconTrash}" Height="20" />
                </ToggleButton>
                <ContentPresenter Content="{Binding}" ContentTemplate="{StaticResource EditTemplateSelector}" />
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="VariantValueModeSelector" DataType="{x:Type sequenceVariant:VariantValueSetting}">
            <ContentPresenter Content="{Binding}">
                <ContentPresenter.Style>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="ContentTemplate" Value="{StaticResource ChangeMode}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding EditMode}"
                                         Value="{x:Static sequenceVariant:EditVariantMode.Add}">
                                <Setter Property="ContentTemplate" Value="{StaticResource AddMode}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentPresenter.Style>
            </ContentPresenter>
        </DataTemplate>

        <DataTemplate x:Key="VariantValueTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="OriginalName" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding OriginalValue.Name}" VerticalAlignment="Center" Grid.Column="0">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding EditMode}"
                                             Value="{x:Static sequenceVariant:EditVariantMode.Remove}">
                                    <Setter Property="TextDecorations" Value="Strikethrough" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <ContentPresenter Grid.Column="2" Content="{Binding}"
                                  ContentTemplate="{StaticResource VariantValueModeSelector}" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="ExternalVariantsTemplate" DataType="{x:Type sequenceVariant:VariantGroupPackage}">
            <ItemsControl ItemsSource="{Binding ExternalSequenceVariantGroups}" Margin="0,20,0,0">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Vertical" Margin="0,0,20,0">
                            <!--<StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding HasError}" Value="True">
                                            <Setter Property="Background" Value="Red" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>-->
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding SequenceName}" FontSize="14" Margin="0,0,0,5" />
                                <TextBlock Text=" !!!" Foreground="{StaticResource ALRedBrush}" FontSize="14"
                                           FontWeight="Black"
                                           Visibility="{Binding HasError, Converter={StaticResource BoolToVisibility}}" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                <Button Height="20" HorizontalAlignment="Center" Padding="3"
                                        Margin="0,0,5,0"
                                        Command="{Binding DataContext.AddVariantToExternalCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"
                                        CommandParameter="{Binding}">
                                    <UserControl Style="{StaticResource IconAddPlus}" />
                                </Button>

                                <alControls:TextBlock LocTextKey="Mtf_VariantWizard_AddNewValue"
                                                      VerticalAlignment="Center" />
                            </StackPanel>
                            <ItemsControl ItemsSource="{Binding ValueSetting}" Grid.IsSharedSizeScope="True"
                                          ItemTemplate="{StaticResource VariantValueTemplate}" />
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </DataTemplate>

        <DataTemplate x:Key="ExternalVariantsSelector" DataType="{x:Type sequenceVariant:VariantGroupPackage}">
            <ContentPresenter Content="{Binding}">
                <ContentPresenter.Style>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="ContentTemplate" Value="{StaticResource EmptyTemplate}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ChangeInExternal}" Value="True">
                                <Setter Property="ContentTemplate" Value="{StaticResource ExternalVariantsTemplate}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentPresenter.Style>
            </ContentPresenter>
        </DataTemplate>

        <DataTemplate x:Key="Header" DataType="{x:Type sequenceVariant:SequenceVariantWizardPresenter}">
            <Border Background="{StaticResource ALYellowBrush}" Padding="10,10,20,10">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,10">
                        <UserControl Style="{StaticResource IconVariant}" Height="30" />
                        <alControls:TextBlock LocTextKey="Mtf_VariantWizard_AllowedGroups" Margin="5"
                                              Style="{StaticResource Heading2}" />
                    </StackPanel>
                    <ItemsControl Grid.Row="1" ItemsSource="{Binding Groups}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" Margin="0,5,5,5">
                                    <CheckBox IsChecked="{Binding IsActive}"
                                              Command="{Binding DataContext.IsActiveChangeCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"
                                              CommandParameter="{Binding}"
                                              BorderBrush="{StaticResource ALBlackBrush}" />
                                    <TextBlock Text="{Binding Name}" Margin="3" VerticalAlignment="Center" />
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="SelectedGroupTemplate" DataType="{x:Type sequenceVariant:VariantGroupPackage}">
            <Grid Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Text="{Binding Name}" Style="{StaticResource Heading2}" />

                <Grid Grid.Row="1" Margin="0,0,0,20">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="10" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Button Grid.Row="0" Grid.Column="0" Height="20" HorizontalAlignment="Center" Padding="3"
                            Margin="0,0,5,0"
                            Command="{Binding DataContext.AddVariantCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"
                            CommandParameter="{Binding}">
                        <UserControl Style="{StaticResource IconAddPlus}" />
                    </Button>

                    <alControls:TextBlock Grid.Row="0" Grid.Column="2" LocTextKey="Mtf_VariantWizard_AddNewValue"
                                          VerticalAlignment="Center" />

                    <CheckBox Grid.Row="2" Grid.Column="0" IsChecked="{Binding ChangeInExternal}"
                              HorizontalAlignment="Center" />
                    <alControls:TextBlock Grid.Row="2" Grid.Column="2" LocTextKey="Mtf_VariantWizard_ApplyForExternal" />
                </Grid>


                <ItemsControl Grid.Row="2" ItemsSource="{Binding ValueSetting}" Grid.IsSharedSizeScope="True"
                              ItemTemplate="{StaticResource VariantValueTemplate}" />

                <ContentPresenter Grid.Row="3" Content="{Binding}"
                                  ContentTemplate="{StaticResource ExternalVariantsSelector}" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="SelectedGroupTemplateSelector" DataType="{x:Type sequenceVariant:VariantGroupPackage}">
            <ContentPresenter Content="{Binding}">
                <ContentPresenter.Style>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="ContentTemplate" Value="{StaticResource EmptyTemplate}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsActive}" Value="True">
                                <Setter Property="ContentTemplate" Value="{StaticResource SelectedGroupTemplate}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentPresenter.Style>
            </ContentPresenter>
        </DataTemplate>

        <DataTemplate x:Key="VariantContent" DataType="{x:Type sequenceVariant:SequenceVariantWizardPresenter}">
            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
                          Name="SettingContent">
                <ItemsControl ItemsSource="{Binding Groups}"
                              ItemTemplate="{StaticResource SelectedGroupTemplateSelector}" />
            </ScrollViewer>
        </DataTemplate>


        <DataTemplate x:Key="OverviewVariants" DataType="{x:Type sequenceVariant:VariantGroupPackage}">
            <Grid Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Text="{Binding Result.GroupName}" Style="{StaticResource Heading2}" />
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="20" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0" Orientation="Vertical">
                        <TextBlock Text="{Binding Result.SequenceName}" FontSize="14" Margin="0,0,0,10" />
                        <ItemsControl ItemsSource="{Binding Result.SequenceVariantValues}"
                                      DisplayMemberPath="Name" />
                    </StackPanel>
                    <ItemsControl Grid.Column="2"
                                  ItemsSource="{Binding Result.ExternalSequenceVariantResults}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Vertical" Margin="0,0,10,0">
                                    <TextBlock Text="{Binding SequenceName}" FontSize="14" Margin="0,0,0,10" />
                                    <ItemsControl ItemsSource="{Binding SequenceVariantValues}"
                                                  DisplayMemberPath="Name" />
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>

            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="OverviewVariantsSelector">
            <ContentPresenter Content="{Binding}">
                <ContentPresenter.Style>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="ContentTemplate" Value="{StaticResource EmptyTemplate}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsActive}" Value="True">
                                <Setter Property="ContentTemplate" Value="{StaticResource OverviewVariants}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentPresenter.Style>
            </ContentPresenter>
        </DataTemplate>

        <DataTemplate x:Key="ConflictTemplate">
            <DataTemplate.Resources>
                <DataTemplate DataType="{x:Type mtfClientServerCommon:MTFSequenceActivity}">
                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal">
                            <localizedString:LocalizedStringTextBlock
                                Identifier="{Binding ActivityName, Mode=OneWay}"
                                UniqueIndexer="{Binding UniqueIndexer}" FontWeight="Bold" />
                            <TextBlock Text=" (" />
                            <localizedString:LocalizedActivityPathTextBlock Activity="{Binding}" />
                            <TextBlock Text=")" />
                        </StackPanel>
                        <TextBlock Text="This SubSequence contains empty case." />
                    </StackPanel>
                </DataTemplate>
                <DataTemplate DataType="{x:Type mtfValidationTable:MTFValidationTableRow}">
                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Parent.Name}" FontWeight="Bold" />
                            <TextBlock Text="." FontWeight="Bold" />
                            <TextBlock Text="{Binding Header}" FontWeight="Bold" />
                        </StackPanel>
                        <TextBlock Text="This row contains empty row variant." />
                    </StackPanel>
                </DataTemplate>
                <DataTemplate DataType="{x:Type mtfTable:MTFTableRow}">
                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Parent.Name}" FontWeight="Bold" />
                            <TextBlock Text="." FontWeight="Bold" />
                            <TextBlock Text="{Binding Header}" FontWeight="Bold" />
                        </StackPanel>
                        <TextBlock Text="This row contains empty row variant." />
                    </StackPanel>
                </DataTemplate>
                <DataTemplate DataType="{x:Type mtfClientServerCommon:MTFSequenceClassInfo}">
                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="{Binding Alias}" FontWeight="Bold" />
                        <TextBlock Text="This component contains data with empty variant." />
                    </StackPanel>
                </DataTemplate>
            </DataTemplate.Resources>
            <Grid Height="40">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ComboBox
                    ItemsSource="{Binding DataContext.EnumChoices, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"
                    SelectedValue="{Binding Choice}"
                    VerticalAlignment="Center" />
                <ContentPresenter Grid.Column="2" Content="{Binding ParentObject}" VerticalAlignment="Center" />
            </Grid>


        </DataTemplate>

        <DataTemplate x:Key="OverviewConflicts" DataType="{x:Type sequenceVariant:SequenceVariantWizardPresenter}">

            <Grid Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="5" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Text="Empty variants has been found" Style="{StaticResource Heading2}" />
                <TextBlock Grid.Row="1" Text="Please decide what to do with empty variants" />
                <ItemsControl Grid.Row="3" ItemsSource="{Binding VariantConflicts}"
                              ItemTemplate="{StaticResource ConflictTemplate}" />

            </Grid>
        </DataTemplate>


        <DataTemplate x:Key="OverviewTemplate">
            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <ItemsControl ItemsSource="{Binding Groups}" Grid.Row="0"
                                  ItemTemplate="{StaticResource OverviewVariantsSelector}" />
                    <ContentPresenter Grid.Row="1" Content="{Binding}">
                        <ContentPresenter.Style>
                            <Style TargetType="ContentPresenter">
                                <Setter Property="ContentTemplate" Value="{StaticResource OverviewConflicts}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding VariantConflicts}" Value="{x:Null}">
                                        <Setter Property="ContentTemplate" Value="{StaticResource EmptyTemplate}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentPresenter.Style>
                    </ContentPresenter>

                </Grid>
            </ScrollViewer>
        </DataTemplate>

        <DataTemplate x:Key="VariantContentSelector" DataType="{x:Type sequenceVariant:SequenceVariantWizardPresenter}">
            <Grid Name="ParentElement">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ContentPresenter Content="{Binding}">
                    <ContentPresenter.Style>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="ContentTemplate" Value="{StaticResource VariantContent}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding WizardMode}"
                                             Value="{x:Static sequenceVariant:SequenceVariantWizardModes.Overview}">
                                    <Setter Property="ContentTemplate" Value="{StaticResource OverviewTemplate}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentPresenter.Style>
                </ContentPresenter>
                <ContentPresenter Grid.Row="1" Content="{Binding}" HorizontalAlignment="Right" Margin="10"
                                  ContentTemplate="{StaticResource Buttons}" />
            </Grid>
        </DataTemplate>

    </UserControl.Resources>


    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <ContentPresenter Grid.Column="0" Content="{Binding}"
                          ContentTemplate="{StaticResource Header}">
            <ContentPresenter.Style>
                <Style TargetType="ContentPresenter">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding WizardMode}"
                                     Value="{x:Static sequenceVariant:SequenceVariantWizardModes.Overview}">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentPresenter.Style>
        </ContentPresenter>

        <ContentPresenter Grid.Column="1" Content="{Binding}"
                          ContentTemplate="{StaticResource VariantContentSelector}" />


    </Grid>
</UserControl>