<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mtfClientServerCommon="clr-namespace:MTFClientServerCommon;assembly=MTFClientServerCommon">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Constants.xaml"/>
        <ResourceDictionary Source="../Resources/MTFIcons/Copy.xaml"/>
        <ResourceDictionary Source="../Resources/MTFIcons/Paste.xaml"/>
        <ResourceDictionary Source="../Resources/MTFIcons/Trash.xaml"/>
        <ResourceDictionary Source="../Resources/MTFIcons/FindUsages.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="ListBox">
        <Setter Property="BorderThickness" Value="0" />
    </Style>



    <DataTemplate x:Key="ActivityTemplate" DataType="{x:Type mtfClientServerCommon:MTFSequenceActivity}">
        <ContentPresenter Content="{Binding}" />
    </DataTemplate>

    <!--Use in ListBox.ItemContentainerStyle:
        ItemContainerStyle="{StaticResource NoSelectionListBoxItem}">-->
    <Style x:Key="NoSelectionListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive"
                                            Value="False" />
                                <Condition Property="IsSelected"
                                            Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="Transparent" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive"
                                            Value="True" />
                                <Condition Property="IsSelected"
                                            Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="Transparent" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ValidationTableInitRow" TargetType="{x:Type ListBoxItem}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ContextMenu x:Key="MainListBoxContextMenu">
        <MenuItem Header="Paste" InputGestureText="Ctrl+V"
                    Command="{Binding PasteFromContextMenuOnListBoxCommand, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type UserControl}}}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                    IsEnabled="{Binding DataContext.IsFilledMTFClipboard,
                    RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type UserControl}}}">
            <MenuItem.HeaderTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <UserControl HorizontalAlignment="Right" VerticalAlignment="Top" MaxWidth="30" MaxHeight="30"
                                                                    Style="{StaticResource IconPaste}"
                                                                    Margin="0,0,10,0"/>
                        <TextBlock Text="Paste" VerticalAlignment="Center" />
                    </StackPanel>
                </DataTemplate>
            </MenuItem.HeaderTemplate>
        </MenuItem>
    </ContextMenu>

    <ContextMenu x:Key="ListBoxItemContextMenu" >
        <MenuItem Header="Copy" InputGestureText="Ctrl+C"
                      Command="{Binding CopyFromContextMenu, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type UserControl}}}"
                    IsEnabled="{Binding DataContext.IsSelectedItem,
                    RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type UserControl}}}">
            <MenuItem.HeaderTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <UserControl HorizontalAlignment="Right" VerticalAlignment="Top" MaxWidth="30" MaxHeight="30"
                                                                    Style="{StaticResource IconCopy}"
                                                                    Margin="0,0,10,0"/>
                        <TextBlock Text="Copy" VerticalAlignment="Center" />
                    </StackPanel>
                </DataTemplate>
            </MenuItem.HeaderTemplate>
        </MenuItem>
        <MenuItem Header="Paste" InputGestureText="Ctrl+V"
                    Command="{Binding PasteFromContextMenu, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type UserControl}}}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                    IsEnabled="{Binding DataContext.IsFilledMTFClipboard,
                    RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type UserControl}}}">
            <MenuItem.HeaderTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <UserControl HorizontalAlignment="Right" VerticalAlignment="Top" MaxWidth="30" MaxHeight="30"
                                                                    Style="{StaticResource IconPaste}"
                                                                    Margin="0,0,10,0"/>
                        <TextBlock Text="Paste" VerticalAlignment="Center" />
                    </StackPanel>
                </DataTemplate>
            </MenuItem.HeaderTemplate>
        </MenuItem>
        <MenuItem Header="Delete" InputGestureText="Delete"
                    Command="{Binding DeleteFromContextMenu, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type UserControl}}}"
                    IsEnabled="{Binding DataContext.IsSelectedItem,
                    RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type UserControl}}}">
            <MenuItem.HeaderTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <UserControl HorizontalAlignment="Right" VerticalAlignment="Top" MaxWidth="30" MaxHeight="30"
                                                                    Style="{StaticResource IconTrash}"
                                                                    Margin="0,0,10,0"/>
                        <TextBlock Text="Delete" VerticalAlignment="Center" />
                    </StackPanel>
                </DataTemplate>
            </MenuItem.HeaderTemplate>
        </MenuItem>
        <MenuItem Command="{Binding DataContext.CreateFindUsagesFromActivityCommand, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type UserControl}}}"
                  CommandParameter="{Binding}">
            <MenuItem.HeaderTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <UserControl HorizontalAlignment="Right" VerticalAlignment="Top" MaxWidth="30" MaxHeight="30"
                                                                    Style="{StaticResource IconFindUsages}"
                                                                    Margin="0,0,10,0"/>
                        <TextBlock Text="Find Usages" VerticalAlignment="Center" />
                    </StackPanel>
                </DataTemplate>
            </MenuItem.HeaderTemplate>
        </MenuItem>
    </ContextMenu>

    <Style x:Key="ActivityListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="ContentTemplate" Value="{StaticResource ActivityTemplate}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ContextMenu" Value="{StaticResource ListBoxItemContextMenu}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="Transparent" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="Transparent" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SelectableListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive"
                                            Value="False" />
                                <Condition Property="IsSelected"
                                            Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{StaticResource ALYellowBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive"
                                            Value="True" />
                                <Condition Property="IsSelected"
                                            Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{StaticResource ALYellowBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HintsListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Foreground" Value="{StaticResource ALWhiteBrush}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive"
                                            Value="False" />
                                <Condition Property="IsSelected"
                                            Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{StaticResource ALYellowBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive"
                                            Value="True" />
                                <Condition Property="IsSelected"
                                            Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{StaticResource ALYellowBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ALBlackBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <ControlTemplate x:Key="ListBoxControlTemplate">
        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="True">
            <ScrollViewer Focusable="False" Padding="{TemplateBinding Padding}">
                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </ScrollViewer>
        </Border>
    </ControlTemplate>
</ResourceDictionary>