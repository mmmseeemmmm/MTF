<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:alControls="clr-namespace:ALControls;assembly=ALControls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="TextBlockStyles.xaml"/>
        <ResourceDictionary Source="Constants.xaml"/>
        <ResourceDictionary Source="../Resources/MTFIcons/IconReset.xaml" />
        <ResourceDictionary Source="../Resources/MTFIcons/IconClose.xaml" />
        <ResourceDictionary Source="../Resources/MTFIcons/Minimize.xaml" />
        <ResourceDictionary Source="../Resources/MTFIcons/Maximize.xaml" />
        <ResourceDictionary Source="../Resources/MTFIcons/Power.xaml" />
        <ResourceDictionary Source="../Resources/MTFIcons/Pencil.xaml" />
        <ResourceDictionary Source="../Resources/MTFIcons/Restore.xaml" />
        <ResourceDictionary Source="../Resources/MTFIcons/Trash.xaml" />
        <ResourceDictionary Source="SharedConverters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate TargetType="{x:Type Button}" x:Key="EmptyButtonControlTemplate">
        <ContentPresenter />
    </ControlTemplate>

    
    <Style TargetType="Button">
        <Setter Property="Background" Value="{StaticResource ResourceKey=ALWhiteBrush}" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Padding" Value="10 4 10 4" />
        <Setter Property="BorderBrush" Value="{StaticResource ResourceKey=ElementBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource ResourceKey=BorderThickness}" />
        <Setter Property="Cursor" Value="Hand" />
        <!--<Setter Property="FocusVisualStyle" Value="{x:Null}" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="0" BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" 
                                              Margin="{TemplateBinding Padding}"
                                              IsEnabled="{TemplateBinding IsEnabled}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray" />
                            <Setter Property="FontStyle" Value="Italic" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ALYellowBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ALYellowBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ALYellowBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ALYellowBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type alControls:Button}" BasedOn="{StaticResource {x:Type Button}}">
        
    </Style>
     

    <Style TargetType="Button" x:Key="DialogButton" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="0" BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" 
                                              Margin="{TemplateBinding Padding}"
                                              IsEnabled="{TemplateBinding IsEnabled}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray" />
                            <Setter Property="FontStyle" Value="Italic" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ALDarkYellowBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="TransparentButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="0" BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" 
                                              Margin="{TemplateBinding Padding}"
                                              IsEnabled="{TemplateBinding IsEnabled}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DarkButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="0" BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" 
                                              Margin="{TemplateBinding Padding}"
                                              IsEnabled="{TemplateBinding IsEnabled}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray" />
                            <Setter Property="FontStyle" Value="Italic" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ALDarkYellowBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ALDarkYellowBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ALDarkYellowBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ALDarkYellowBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Padding" Value="1" />
        <Setter Property="Width" Value="70" />
        <Setter Property="Height" Value="20" />
    </Style>

    <Style x:Key="SmallButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Padding" Value="1" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="20"/>
    </Style>

    <Style TargetType="Grid" x:Key="AnimationGrid">
        <Setter Property="RenderTransformOrigin" Value="0.5 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <RotateTransform />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Grid.MouseLeftButtonDown">
                <BeginStoryboard>
                    <Storyboard TargetProperty="RenderTransform.Angle">
                        <DoubleAnimation From="-10" To="10" Duration="0:0:0.15" AutoReverse="True" FillBehavior="Stop" RepeatBehavior="0:0:0.45" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CommandButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Foreground" Value="{StaticResource ResourceKey=ALBlackBrush}" />
        <Setter Property="Background" Value="{StaticResource ResourceKey=ALYellowBrush}" />
        <Setter Property="MinWidth" Value="70" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel Background="{TemplateBinding Background}">
                        <Grid Style="{StaticResource AnimationGrid}" Background="Transparent">
                            <UserControl Style="{Binding Icon, Converter={StaticResource ResourceKey=IconConverter}}" Width="20" />
                        </Grid>
                        <alControls:TextBlock HorizontalAlignment="Center"
                                              VerticalAlignment="Bottom"
                                              Margin="0,10,0,0"
                                              LocTextKey="{Binding Name}"
                                              Style="{StaticResource {x:Type TextBlock}}"
                                              TextWrapping="Wrap" MaxWidth="72"/>
                        
                        <Popup IsOpen="{Binding IsShortcutPopupOpen, Mode=OneWay}" Placement="Center" Focusable="False" StaysOpen="True" PopupAnimation="None" AllowsTransparency="True">
                            <Border Background="{StaticResource ALDarkYellowBrush}" BorderThickness="1" BorderBrush="{StaticResource ALBlackBrush}">
                                <TextBlock Text="{Binding ShortcutNames}" Foreground="{StaticResource ALBlackBrush}" Margin="5 7" />
                            </Border>
                        </Popup>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource ResourceKey=ALWhiteBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray" />
                            <Setter Property="FontStyle" Value="Italic" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    
    <!-- Styles for close and minimize buttons on main window -->
    <Style TargetType="Button" x:Key="CloseButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="15"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{StaticResource EmptyButtonControlTemplate}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <UserControl Style="{StaticResource IconClose}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="ResetButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="15"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <UserControl Style="{StaticResource IconReset}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="RemoveButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="15"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderBrush="{TemplateBinding Foreground}" BorderThickness="1" CornerRadius="2" SnapsToDevicePixels="True"
                            Background="{TemplateBinding Background}">
                        <Grid Margin="0">
                            <Line Stroke="{TemplateBinding Foreground}" StrokeThickness="3" X1="3" Y1="3" X2="10" Y2="10" />
                            <Line Stroke="{TemplateBinding Foreground}" StrokeThickness="3" X1="3" Y1="10" X2="10" Y2="3" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="RemoveTabButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="15"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="Margin" Value="5,0,0,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="CommandParameter" Value="{Binding}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <UserControl Foreground="{TemplateBinding Foreground}" Background="{TemplateBinding Background}" Style="{StaticResource IconTrash}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="PlusButton" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="0" BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <TextBlock Text="+" HorizontalAlignment="Center" VerticalAlignment="Center"
                                   FontSize="14" FontWeight="Bold" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray" />
                            <Setter Property="FontStyle" Value="Italic" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ALYellowBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ALYellowBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ALYellowBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ALYellowBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="MinusButton" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="0" BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <TextBlock Text="-" HorizontalAlignment="Center" VerticalAlignment="Center"
                                   FontSize="14" FontWeight="Bold" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray" />
                            <Setter Property="FontStyle" Value="Italic" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ALYellowBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ALYellowBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ALYellowBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ALYellowBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="UserControl" x:Key="IsCollapsedStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Polygon VerticalAlignment="Center" Points="0,0 50,50, 0,100" Stroke="{TemplateBinding Foreground}" Fill="{TemplateBinding Foreground}" Stretch="Uniform"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="UserControl" x:Key="IsCollapsedNotFilledStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Polygon VerticalAlignment="Center" Points="0,0 50,50, 0,100" Stroke="{TemplateBinding Foreground}" Fill="{TemplateBinding Background}" Stretch="Uniform"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="CollapsedButton">
        <Setter Property="Width" Value="14"/>
        <Setter Property="Height" Value="14"/>
        <Setter Property="Margin" Value="10,0,10,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="CommandParameter" Value="{Binding}" />
        <Setter Property="Foreground" Value="{StaticResource ALWhiteBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Content" Value="{Binding IsCollapsed}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid VerticalAlignment="Center" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"
                          Background="{TemplateBinding Background}">
                        <UserControl Style="{StaticResource IsCollapsedNotFilledStyle}"
                             Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content, Converter={StaticResource BoolToVisibility}}"
                             Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight}"
                             VerticalAlignment="Center"/>
                        <UserControl Style="{StaticResource IsCollapsedStyle}"
                             Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content, Converter={StaticResource NotBoolToVisibility}}"
                             Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight}"
                             VerticalAlignment="Center">
                            <UserControl.LayoutTransform>
                                <RotateTransform CenterX="0.5" CenterY="0.5" Angle="45" />
                            </UserControl.LayoutTransform>
                        </UserControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="Button" x:Key="MinimizeButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="15" />
        <Setter Property="Height" Value="15" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{StaticResource EmptyButtonControlTemplate}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border Background="Transparent">
                        <UserControl Style="{StaticResource IconMinimize}" VerticalAlignment="Bottom" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" x:Key="MaximizeButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="15" />
        <Setter Property="Height" Value="15" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{StaticResource EmptyButtonControlTemplate}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <UserControl Style="{StaticResource IconMaximize}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" Value="Maximized">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <UserControl Style="{StaticResource IconRestore}" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="ShutdownButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="15" />
        <Setter Property="Height" Value="15" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{StaticResource EmptyButtonControlTemplate}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <UserControl Style="{StaticResource IconPower}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TermDesignerButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Width" Value="15" />
        <Setter Property="Height" Value="15" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="4,1,1,1" />
    </Style>

    <Style x:Key="DeActiveListButtonStyles" TargetType="Button" BasedOn="{StaticResource TermDesignerButton}">
        <Setter Property="ToolTip" Value="Deactivate list." />
        <Setter Property="Foreground" Value="{StaticResource ALBlackBrush}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ShowValueList}" Value="False">
                <!--<Setter Property="Foreground" Value="{StaticResource ALGrayBrush}" />-->
                <Setter Property="ToolTip" Value="Activate list." />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="TermDesignerButtonContent">
        <UserControl Style="{StaticResource IconPencil}" />
    </DataTemplate>

    <Style TargetType="Button" x:Key="FindUsagesCommandButton" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style TargetType="Button" x:Key="RoundButton" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="0" BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}" IsEnabled="{TemplateBinding IsEnabled}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray" />
                            <Setter Property="FontStyle" Value="Italic" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ALWhiteBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ALWhiteBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ALWhiteBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Background" Value="{StaticResource ResourceKey=ALWhiteBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>