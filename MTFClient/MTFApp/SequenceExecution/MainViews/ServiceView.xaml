<uiHelpers:MTFUserControl x:Class="MTFApp.SequenceExecution.MainViews.ServiceView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:sequenceExecution="clr-namespace:MTFApp.SequenceExecution"
             xmlns:converters="clr-namespace:MTFApp.UIHelpers.Converters"
             xmlns:editors="clr-namespace:MTFApp.UIHelpers.Editors"
             xmlns:commandGrid="clr-namespace:MTFApp.UIControls.CommandGrid"
             xmlns:imageHandling="clr-namespace:MTFApp.SequenceExecution.ImageHandling"
             xmlns:uiHelpers="clr-namespace:MTFApp.UIHelpers"
             xmlns:sharedControls="clr-namespace:MTFApp.SequenceExecution.SharedControls"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <converters:MTFServiceCommandIconToStyle x:Key="serviceCommandIconConverter" />

        <DataTemplate x:Key="ImageDetail">
            <imageHandling:ImageControl UseSlider="True" ImagePresenter="{Binding ImageHandler.ImageBuffer}" IsPreview="False"
                                        Background="{StaticResource ALBlackBrush}"/>
        </DataTemplate>

        <DataTemplate x:Key="EmptyTemplate" />

        <DataTemplate x:Key="ManualServicePlacement">
            <commandGrid:CommandGridControl ExecutionCommands="{Binding ServiceCommands}"
                                            Mode="Execution"
                                            ServiceModeVariant="ServiceMode"
                                            ColumnsCount="{Binding Sequence.ServiceDesignSetting.ServiceSetting.ColumnsCount}"
                                            RowsCount="{Binding Sequence.ServiceDesignSetting.ServiceSetting.RowsCount}"
                                            ShowLabels="{Binding Sequence.ServiceDesignSetting.ShowLabels}" />
        </DataTemplate>

        <DataTemplate x:Key="ManualTeachPlacement">
            <commandGrid:CommandGridControl ExecutionCommands="{Binding ServiceCommands}"
                                            Mode="Execution"
                                            ServiceModeVariant="Teach"
                                            ColumnsCount="{Binding Sequence.ServiceDesignSetting.TeachSetting.ColumnsCount}"
                                            RowsCount="{Binding Sequence.ServiceDesignSetting.TeachSetting.RowsCount}"
                                            ShowLabels="{Binding Sequence.ServiceDesignSetting.ShowLabels}" />
        </DataTemplate>

        <DataTemplate x:Key="ServiceTables">
            <ListBox ItemsSource="{Binding ServiceTables}" Name="ServiceTablesListBox"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     ItemContainerStyle="{StaticResource NoSelectionListBoxItem}"
                     VerticalContentAlignment="Top" Margin="5">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Width="{Binding ElementName=ServiceTablesListBox, Path=ActualWidth}" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <editors:MTFValidationTableEditor Value="{Binding Mode=OneWay}" EditorMode="ReadOnlyTable"
                                                          Margin="6,3,0,15"
                                                          ParentSequence="{Binding DataContext.Sequence, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type sequenceExecution:SequenceExecutionControl}}}" />
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </DataTemplate>

        <DataTemplate x:Key="DefaultPlacement">
            <ListBox
                Grid.IsSharedSizeScope="True" VerticalAlignment="Stretch"
                ItemsSource="{Binding ServiceCommands}"
                HorizontalContentAlignment="Stretch" Margin="5"
                ItemContainerStyle="{StaticResource NoSelectionListBoxItem}"
                Template="{StaticResource ListBoxControlTemplate}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Button Margin="10" Width="320"
                                HorizontalContentAlignment="Left" BorderThickness="0"
                                Command="{Binding ExecutedCommand}" CommandParameter="{Binding Command}"
                                ToolTip="{Binding Command.Name}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="serviceCommandIcon" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="80" />
                                </Grid.RowDefinitions>
                                <UserControl Grid.Column="0" Grid.RowSpan="2"
                                             Style="{Binding Command.Icon, Converter={StaticResource serviceCommandIconConverter}}"
                                             Margin="2 6 2 6" HorizontalAlignment="Left" />
                                <TextBlock Grid.Column="1" Text="{Binding Command.Name}"
                                           VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="14"
                                           Margin="10,0,0,0" TextWrapping="Wrap"
                                           Visibility="{Binding DataContext.Sequence.ServiceDesignSetting.ShowLabels, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, 
                                                        Converter={StaticResource BoolToVisibility}}" />
                            </Grid>
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="Background" Value="{StaticResource ALYellowBrush}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsChecked}" Value="True">
                                            <Setter Property="Background" Value="{StaticResource ALDarkerYellowBrush}" />
                                            <Setter Property="Foreground" Value="{StaticResource ALWhiteBrush}" />
                                        </DataTrigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="Gray" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </DataTemplate>
                </ListBox.ItemTemplate>

                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel
                            Width="{Binding (FrameworkElement.ActualWidth), RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>
        </DataTemplate>


        <DataTemplate x:Key="ServiceViewTemplate">
            <ContentPresenter Content="{Binding}">
                <ContentPresenter.Style>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="ContentTemplate" Value="{StaticResource EmptyTemplate}" />
                        <Style.Triggers>
                            <DataTrigger
                                Binding="{Binding Sequence.ServiceDesignSetting.ServiceSetting.ManualPlacement}"
                                Value="True">
                                <Setter Property="ContentTemplate" Value="{StaticResource ManualServicePlacement}" />
                            </DataTrigger>
                            <DataTrigger
                                Binding="{Binding Sequence.ServiceDesignSetting.ServiceSetting.ManualPlacement}"
                                Value="False">
                                <Setter Property="ContentTemplate" Value="{StaticResource DefaultPlacement}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentPresenter.Style>
            </ContentPresenter>
        </DataTemplate>

        <DataTemplate x:Key="TeachViewTemplate">
            <ContentPresenter Content="{Binding}">
                <ContentPresenter.Style>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="ContentTemplate" Value="{StaticResource EmptyTemplate}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Sequence.ServiceDesignSetting.TeachSetting.ManualPlacement}"
                                         Value="True">
                                <Setter Property="ContentTemplate" Value="{StaticResource ManualTeachPlacement}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Sequence.ServiceDesignSetting.TeachSetting.ManualPlacement}"
                                         Value="False">
                                <Setter Property="ContentTemplate" Value="{StaticResource DefaultPlacement}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentPresenter.Style>
            </ContentPresenter>
        </DataTemplate>

        <DataTemplate x:Key="ButtonsDetail">
            <Grid x:Name="ServiceViewGrid" Loaded="GridOnLoaded" SizeChanged="ServiceViewGridSizeChanged">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" MinHeight="100" />
                    <RowDefinition Height="200" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ContentPresenter Content="{Binding}" Grid.Row="0">
                    <ContentPresenter.Style>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="ContentTemplate" Value="{StaticResource EmptyTemplate}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsServiceActivated}" Value="True">
                                    <Setter Property="ContentTemplate" Value="{StaticResource ServiceViewTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsTeachingActivated}" Value="True">
                                    <Setter Property="ContentTemplate" Value="{StaticResource TeachViewTemplate}" />
                                </DataTrigger>
                            </Style.Triggers>

                        </Style>
                    </ContentPresenter.Style>
                </ContentPresenter>
                <ContentPresenter Content="{Binding}" ContentTemplate="{StaticResource ServiceTables}" Grid.Row="1" />
                <GridSplitter Style="{StaticResource HorizontalGridSplitter}" Grid.Row="1"
                              DragCompleted="GridSplitterDragCompleted"
                              DragStarted="GridSplitterDragStarted"
                              Tag="{Binding ElementName=ServiceViewGrid}"/>
                <sharedControls:StatusBar DataContext="{Binding}" Grid.Row="2" />
            </Grid>
        </DataTemplate>

    </UserControl.Resources>
    <ContentPresenter Content="{Binding}">
        <ContentPresenter.Style>
            <Style TargetType="ContentPresenter">
                <Setter Property="ContentTemplate" Value="{StaticResource ButtonsDetail}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding DetailMode}" Value="Image">
                        <Setter Property="ContentTemplate" Value="{StaticResource ImageDetail}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ContentPresenter.Style>
    </ContentPresenter>
</uiHelpers:MTFUserControl>